const adjList = {
    1: [2, 5],
    2: [1, 3, 5],
    3: [2, 4],
    4: [3, 5],
    5: [1, 2, 4],
    6: []
}

function breadthFirstSearch(start, end) {
  let visited = new Set().add(start)
  let queue = [start]
  // console.log(visited)

  while(queue.length){
    // console.log('visited', visited)
    // console.log('queue',queue)
    let curr = queue.shift()
    // console.log('curr', curr)
    if(curr === end){
      return true
    }
    let neighbors = adjList[curr]
    for(let val of neighbors){
      // console.log('val', val)
      if(!visited.has(val)){
        queue.push(val)
        visited.add(val)
    }
    }





    // console.log('visited',visited)



    // make sure not in visited before push to q - if not push into q






  }
  return false





}

console.log("First Test:");
console.log(breadthFirstSearch(1, 3)); // -> true
console.log("Second Test:");
console.log(breadthFirstSearch(4, 1)); // -> true
console.log("Third Test:");
console.log(breadthFirstSearch(6, 1)); // -> false
